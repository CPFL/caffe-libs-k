#  Copyright (c) 2003 Michael Stevens
#  Copyright (c) 2011 Bryce Lelbach
#
#  Use, modification and distribution is subject to the Boost Software
#  License Version 1.0. (See accompanying file LICENSE_1_0.txt or
#  http://www.boost.org/LICENSE_1_0.txt)

import toolset ;
import feature ;
import toolset : flags ;

import fujitsu ;
import gcc ;
import common ;
import errors ;
import generators ;
import type ;
import numbers ;

feature.extend-subfeature toolset fujitsu : platform : linux ;

toolset.inherit-generators fujitsu-linux 
     <toolset>fujitsu <toolset-fujitsu:platform>linux : gcc : gcc.mingw.link gcc.mingw.link.dll ;
generators.override fujitsu-linux.prebuilt : builtin.lib-generator ;
generators.override fujitsu-linux.prebuilt : builtin.prebuilt ;
generators.override fujitsu-linux.searched-lib-generator : searched-lib-generator ;

generators.override fujitsu-linux.compile.c++.pch : pch.default-cpp-pch-generator ;
type.set-generated-target-suffix PCH : <toolset>fujitsu <toolset-fujitsu:platform>linux : pch ;

toolset.inherit-rules fujitsu-linux : gcc ;
toolset.inherit-flags fujitsu-linux : gcc 
        : <inlining>off <inlining>on <inlining>full
          <optimization>space <optimization>speed
          <warnings>off <warnings>all <warnings>on
        ;
        
toolset.flags fujitsu-linux.compile OPTIONS <warnings>off : -w ;
toolset.flags fujitsu-linux.compile OPTIONS <warnings>all  : --no_brief_diagnostics --diag_suppress 161 ;
toolset.flags fujitsu-linux.compile OPTIONS <warnings>on  : --no_brief_diagnostics --diag_suppress 161 ;
#toolset.flags fujitsu-linux.compile OPTIONS <warnings>on : --no_brief_diagnostics --display_error_number ;

# Initializes the fujitsu-linux toolset
#   version in mandatory
#   name (default icpc) is used to invoke the specified fujitsu-linux complier
#   compile and link options allow you to specify addition command line options for each version
rule init ( version ? :  command * : options * )
{
    local condition = [ common.check-init-parameters fujitsu-linux
        : version $(version) ] ;
    
    local default_path ;
    default_path = /opt/FJSVtclang/GM-1.2.0-20/bin ;

    command = [ common.get-invocation-command fujitsu-linux : FCC 
        : $(command) : $(default_path) ] ;
                
    common.handle-options fujitsu-linux : $(condition) : $(command) : $(options) ;

    gcc.init-link-flags fujitsu-linux gnu $(condition) ;
    
    local root = [ feature.get-values <root> : $(options) ] ;
    local bin ;
    if $(command) || $(root)
    {
        bin ?= [ common.get-absolute-tool-path $(command[-1]) ] ;
        root ?= $(bin:D) ;
        
       flags fujitsu-linux.compile OPTIONS $(condition)/<optimization>speed : "-Kfast" ;
        if $(root)
        {
            local lib_path = $(root)/lib64 $(root:P)/lib/$(bin:B) /usr/lib64 ;
            flags fujitsu-linux.link RUN_PATH $(condition) : $(lib_path) ;
        }   
    }
}

SPACE = " " ;

rule compile.c++ ( targets * : sources * : properties * )
{
    setup-threading $(targets) : $(sources) : $(properties) ;
    gcc.setup-fpic $(targets) : $(sources) : $(properties) ;
    gcc.setup-address-model $(targets) : $(sources) : $(properties) ;
}

rule compile.c ( targets * : sources * : properties * )
{
    setup-threading $(targets) : $(sources) : $(properties) ;
    gcc.setup-fpic $(targets) : $(sources) : $(properties) ;
    gcc.setup-address-model $(targets) : $(sources) : $(properties) ;    
}

rule link ( targets * : sources * : properties * )
{
    gcc.setup-threading $(targets) : $(sources) : $(properties) ;
    gcc.setup-address-model $(targets) : $(sources) : $(properties) ;    
    SPACE on $(targets) = " " ;
    JAM_SEMAPHORE on $(targets) = <s>fujitsu-linux-link-semaphore ;
}

actions link bind LIBRARIES
{
    "$(CONFIG_COMMAND)" -L"$(LINKPATH)" -Wl,-R$(SPACE)-Wl,"$(RPATH)" -Wl,-rpath-link$(SPACE)-Wl,"$(RPATH_LINK)" -o "$(<)" "$(>)" "$(LIBRARIES)" -l$(FINDLIBS-SA) -l$(FINDLIBS-ST) $(OPTIONS) $(USER_OPTIONS)
}

rule link.dll ( targets * : sources * : properties * )
{
    gcc.setup-threading $(targets) : $(sources) : $(properties) ;
    gcc.setup-address-model $(targets) : $(sources) : $(properties) ;    
    SPACE on $(targets) = " " ;
    JAM_SEMAPHORE on $(targets) = <s>fujitsu-linux-link-semaphore ;
}

# Differ from 'link' above only by -shared.
actions link.dll bind LIBRARIES
{
    "$(CONFIG_COMMAND)" -L"$(LINKPATH)" -Wl,-R$(SPACE)-Wl,"$(RPATH)" -o "$(<)" -Wl,-soname$(SPACE)-Wl,$(<[1]:D=) -shared "$(>)"  "$(LIBRARIES)" -l$(FINDLIBS-SA) -l$(FINDLIBS-ST) $(OPTIONS) $(USER_OPTIONS)
}

rule setup-threading ( targets * : sources * : properties * )
{
    local threading = [ feature.get-values threading : $(properties) ] ;
    if $(threading) = multi
    {
        option = -mt -pthread ;
    }
}

rule compile.c++.pch ( targets * : sources * : properties * )
{
    gcc.setup-threading $(targets) : $(sources) : $(properties) ;
    gcc.setup-fpic $(targets) : $(sources) : $(properties) ;
    gcc.setup-address-model $(targets) : $(sources) : $(properties) ;    
}

actions compile.c++.pch
{
    gcc.setup-threading $(targets) : $(sources) : $(properties) ;
    gcc.setup-fpic $(targets) : $(sources) : $(properties) ;
    gcc.setup-address-model $(targets) : $(sources) : $(properties) ;    
}

actions compile.c++
{
    "$(CONFIG_COMMAND)"  $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -c -o "$(<:W)" "$(>:W)"
}

actions compile.c
{
    "$(CONFIG_COMMAND)"  $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -c -o "$(<:W)" "$(>:W)"
}

actions compile.c++.preprocess
{
    "$(CONFIG_COMMAND)" $(OPTIONS) $(USER_OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" "$(>:W)" -E >"$(<:W)"
}

rule compile.asm ( targets * : sources * : properties * )
{
    gcc.setup-fpic $(targets) : $(sources) : $(properties) ;
    gcc.setup-address-model $(targets) : $(sources) : $(properties) ;
}

actions compile.asm
{
    "fcc" $(OPTIONS) -D$(DEFINES) -I"$(INCLUDES)" -c -o "$(<)" "$(>)"
}

